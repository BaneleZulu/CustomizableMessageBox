/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.nihil.messagePanel;

/**
 *
 * @author LATITUDE 5410
 */
import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import com.nihil.Code.RoundedPanel;
import com.nihil.Interface.Messages;

public class MessageBox extends javax.swing.JFrame implements Messages {

    /**
     * Creates new form MessageBox
     */
    private String imageURL;

    public MessageBox() {
        this.setUndecorated(true);
        this.setBackground(new Color(1.0f, 1.0f, 1.0f, 0.0f));
        this.setSize(650, 256);
        this.setTitle("Message Box");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new RoundedPanel(50);
        exitControl = new javax.swing.JLabel();
        outerPnlIndicator = new RoundedPanel(100);
        innrPnlIndicator = new RoundedPanel(100);
        messageHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageContent = new javax.swing.JTextArea();
        messageIcon = new javax.swing.JLabel();
        innrPnlIndicator1 = new RoundedPanel(100);
        linearPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contentPanel.setBackground(new java.awt.Color(255, 255, 255));

        exitControl.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        exitControl.setForeground(new java.awt.Color(204, 204, 204));
        exitControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitControl.setText("X");
        exitControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitControlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitControlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitControlMouseExited(evt);
            }
        });

        outerPnlIndicator.setBackground(new java.awt.Color(51, 51, 51));

        innrPnlIndicator.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout innrPnlIndicatorLayout = new javax.swing.GroupLayout(innrPnlIndicator);
        innrPnlIndicator.setLayout(innrPnlIndicatorLayout);
        innrPnlIndicatorLayout.setHorizontalGroup(
            innrPnlIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        innrPnlIndicatorLayout.setVerticalGroup(
            innrPnlIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout outerPnlIndicatorLayout = new javax.swing.GroupLayout(outerPnlIndicator);
        outerPnlIndicator.setLayout(outerPnlIndicatorLayout);
        outerPnlIndicatorLayout.setHorizontalGroup(
            outerPnlIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPnlIndicatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(innrPnlIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        outerPnlIndicatorLayout.setVerticalGroup(
            outerPnlIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPnlIndicatorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(innrPnlIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        messageHeader.setBackground(new java.awt.Color(41, 41, 41));
        messageHeader.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        messageHeader.setText("MESSAGE HEADER");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageContent.setEditable(false);
        messageContent.setBackground(new java.awt.Color(255, 255, 255));
        messageContent.setColumns(20);
        messageContent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        messageContent.setForeground(new java.awt.Color(30, 30, 30));
        messageContent.setRows(5);
        messageContent.setText("Message content appear here!");
        jScrollPane1.setViewportView(messageContent);

        messageIcon.setBackground(new java.awt.Color(255, 255, 255));

        innrPnlIndicator1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout innrPnlIndicator1Layout = new javax.swing.GroupLayout(innrPnlIndicator1);
        innrPnlIndicator1.setLayout(innrPnlIndicator1Layout);
        innrPnlIndicator1Layout.setHorizontalGroup(
            innrPnlIndicator1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        innrPnlIndicator1Layout.setVerticalGroup(
            innrPnlIndicator1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        linearPanel.setBackground(new java.awt.Color(41, 41, 41));
        linearPanel.setPreferredSize(new java.awt.Dimension(0, 1));

        javax.swing.GroupLayout linearPanelLayout = new javax.swing.GroupLayout(linearPanel);
        linearPanel.setLayout(linearPanelLayout);
        linearPanelLayout.setHorizontalGroup(
            linearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        linearPanelLayout.setVerticalGroup(
            linearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(linearPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, contentPanelLayout.createSequentialGroup()
                        .addComponent(outerPnlIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(messageHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitControl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, contentPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(messageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
            .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentPanelLayout.createSequentialGroup()
                    .addGap(361, 361, 361)
                    .addComponent(innrPnlIndicator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(361, Short.MAX_VALUE)))
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(outerPnlIndicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(messageHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(messageIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linearPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentPanelLayout.createSequentialGroup()
                    .addGap(131, 131, 131)
                    .addComponent(innrPnlIndicator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(131, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseClicked
        this.dispose();
    }//GEN-LAST:event_exitControlMouseClicked

    private void exitControlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseEntered
        exitControl.setForeground(Color.RED);
        exitControl.setFont(new Font("Tahoma", Font.BOLD, 23));
    }//GEN-LAST:event_exitControlMouseEntered

    private void exitControlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitControlMouseExited
        exitControl.setForeground(Color.LIGHT_GRAY);
        exitControl.setFont(new Font("Tahoma", Font.PLAIN, 20));
    }//GEN-LAST:event_exitControlMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MessageBox m = new MessageBox();
            //m.plainMessage("Just testing functionality:)", "Functionality Check.");
            //m.informationMessage("This code is working just fine:)", "For your information");
            //m.warningMessage("This is my code.\nDONT STEAL IT!!!!", "Cyber Warning!");
            //m.questionMessage("So really you just continue stealing my code???", "Why?");
            //m.errorMessage("Your code has bugs. Please debug the error, clean the code and re-run", "Bug Detected!!");
            //m.customMessage("Did you know i have a desktop app for game called GAMERZOCYTE. Check it out", "GAMERZONCTYE", "C:\\Users\\LATITUDE 5410\\c#Programs\\My Projects\\OnlineGameStore\\Resources\\Logos\\logoTransparent.png", Color.LIGHT_GRAY, Color.CYAN);
            m.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel exitControl;
    private javax.swing.JPanel innrPnlIndicator;
    private javax.swing.JPanel innrPnlIndicator1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel linearPanel;
    private javax.swing.JTextArea messageContent;
    private javax.swing.JLabel messageHeader;
    private javax.swing.JLabel messageIcon;
    private javax.swing.JPanel outerPnlIndicator;
    // End of variables declaration//GEN-END:variables

    private void setImageAlignment(String imageURL) {
        ImageIcon icon; ///ImageIcon field....
        BufferedImage img;  ///BufferedImage for reading image path....
        Image sizedImg;  //Image for resizing the image to fit JLabel bounds...
        try {
            img = ImageIO.read(new File(imageURL));
            sizedImg = img.getScaledInstance(img.getWidth() - 2, img.getHeight() - 2, Image.SCALE_SMOOTH);
            icon = new ImageIcon(sizedImg);
            messageIcon.setIcon(icon);
        } catch (IOException error) {
            System.out.println(error.getMessage());
        }
    }

    @Override
    public void plainMessage(String message, String messageHeading) {
        imageURL = "src/main/java/Images/OIP.jpeg";
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(new Color(221, 221, 221));
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }

    @Override
    public void informationMessage(String message, String messageHeading) {
        imageURL = "src/main/java/Images/informationMessageIcon.png";
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(new Color(50, 205, 50));
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }

    @Override
    public void warningMessage(String message, String messageHeading) {
        imageURL = "src/main/java/Images/warningMessageIcon.png";
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(new Color(255, 143, 0));
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }

    @Override
    public void questionMessage(String message, String messageHeading) {
        imageURL = "src/main/java/Images/questionMessageIcon.png";
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(new Color(255, 246, 0));
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }

    @Override
    public void errorMessage(String message, String messageHeading) {
        imageURL = "src/main/java/Images/errorMessageIcon.png";
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(new Color(227, 0, 34));
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }

    /**
     *
     * @param message
     * @param messageHeading
     * @param url
     * @param color
     * @param lineColor
     */
    @Override
    public void customMessage(String message, String messageHeading, String url, Color color, Color lineColor) {
        imageURL = url;
        setImageAlignment(imageURL);

        outerPnlIndicator.setBackground(color);
        linearPanel.setBackground(lineColor);
        messageHeader.setText(messageHeading);
        messageContent.setText(message);
    }
}
